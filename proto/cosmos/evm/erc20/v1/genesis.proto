
syntax = "proto3";
package cosmos.evm.erc20.v1;

import "amino/amino.proto";
import "cosmos/evm/erc20/v1/erc20.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/cosmos/evm/x/erc20/types";

// GenesisState defines the module's genesis state.
message GenesisState {
  // params are the erc20 module parameters at genesis
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  // token_pairs is a slice of the registered token pairs (mappings) at genesis
  repeated TokenPair token_pairs = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  // allowances is a slice of the registered allowances at genesis
  repeated Allowance allowances = 3
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  // native_precompiles is a slice of registered native precompiles at genesis
  repeated string native_precompiles = 4
      [ (gogoproto.nullable) = true, (amino.dont_omitempty) = true ];
  // dynamic_precompiles is a slice of registered dynamic precompiles at genesis
  repeated string dynamic_precompiles = 5
      [ (gogoproto.nullable) = true, (amino.dont_omitempty) = true ];
}

// Params defines the erc20 module params
message Params {
  // enable_erc20 is the parameter to enable the conversion of Cosmos coins <-->
  // ERC20 tokens.
  bool enable_erc20 = 1;
  // enable_evm_hook is now depecrated
  reserved 2;
  // permissionless_registration is the parameter that allows ERC20s to be
  // permissionlessly registered to be converted to bank tokens and vice versa
  bool permissionless_registration = 5;
}
