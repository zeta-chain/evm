syntax = "proto3";
package ethermint.feemarket.v1;

import "cosmos/auth/v1beta1/auth.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/cosmos/evm/legacy/types";


// MsgUpdateParams defines a Msg for updating the x/feemarket module parameters.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // params defines the x/feemarket parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}


// Params defines the EVM module parameters
message Params {
  // no_base_fee forces the EIP-1559 base fee to 0 (needed for 0 price calls)
  bool no_base_fee = 1;
  // base_fee_change_denominator bounds the amount the base fee can change
  // between blocks.
  uint32 base_fee_change_denominator = 2;
  // elasticity_multiplier bounds the maximum gas limit an EIP-1559 block may
  // have.
  uint32 elasticity_multiplier = 3;
  // DEPRECATED: initial base fee for EIP-1559 blocks.
  reserved 4;
  reserved "initial_base_fee";
  // enable_height defines at which block height the base fee calculation is enabled.
  int64 enable_height = 5;
  // base_fee for EIP-1559 blocks.
  string base_fee = 6 [(gogoproto.customtype) = "cosmossdk.io/math.Int", (gogoproto.nullable) = false];
  // min_gas_price defines the minimum gas price value for cosmos and eth transactions
  string min_gas_price = 7
  [(gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (gogoproto.nullable) = false];
  // min_gas_multiplier bounds the minimum gas used to be charged
  // to senders based on gas limit
  string min_gas_multiplier = 8
  [(gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (gogoproto.nullable) = false];
}
